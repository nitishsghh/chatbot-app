{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nitis\\\\Desktop\\\\chatbot\\\\chatbot-app\\\\client\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport SendIcon from '@mui/icons-material/Send';\nimport ImageIcon from '@mui/icons-material/Image';\nimport TranslateIcon from '@mui/icons-material/Translate';\nimport AudiotrackIcon from '@mui/icons-material/Audiotrack';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { startListening, stopListening, speakText, stopSpeaking } from '../services/aiService';\nimport Settings from './Settings';\nimport ChatHistory from './ChatHistory';\nimport { loanMessages } from '../data/loanMessages';\nimport './ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst defaultAvatar = 'https://ui-avatars.com/api/?background=random';\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [chatHistory, setChatHistory] = useState(loanMessages);\n  const [activeChat, setActiveChat] = useState(null);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [settings, setSettings] = useState({\n    darkMode: false,\n    language: 'en-US',\n    autoSpeak: false,\n    voiceSpeed: 1,\n    notifications: false\n  });\n  const messagesEndRef = useRef(null);\n\n  // Apply dark mode\n  useEffect(() => {\n    document.body.setAttribute('data-theme', settings.darkMode ? 'dark' : 'light');\n  }, [settings.darkMode]);\n\n  // Request notification permission\n  useEffect(() => {\n    if (settings.notifications && Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n  }, [settings.notifications]);\n  const handleSettingChange = (key, value) => {\n    if (key === 'clearHistory') {\n      setChatHistory([]);\n      setMessages([]);\n      setActiveChat(null);\n      return;\n    }\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n\n    // Handle special cases\n    if (key === 'voiceSpeed' && isSpeaking) {\n      stopSpeaking();\n      setIsSpeaking(false);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    socket.on('bot-response', response => {\n      const newMessage = {\n        text: response,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, newMessage]);\n      if (activeChat) {\n        updateChatHistory(activeChat.id, [...messages, newMessage]);\n      }\n      setIsTyping(false);\n\n      // Auto-speak the response if enabled\n      if (settings.autoSpeak) {\n        speakText(response);\n      }\n      if (settings.notifications && document.hidden) {\n        showNotification(response);\n      }\n    });\n    socket.on('error', error => {\n      console.error('Error:', error);\n      setIsTyping(false);\n    });\n    return () => {\n      socket.off('bot-response');\n      socket.off('error');\n      stopListening();\n      stopSpeaking();\n    };\n  }, [settings.autoSpeak, settings.notifications, messages, activeChat]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const updateChatHistory = (chatId, updatedMessages) => {\n    setChatHistory(prev => prev.map(chat => {\n      if (chat.id === chatId) {\n        return {\n          ...chat,\n          messages: updatedMessages,\n          lastMessage: updatedMessages[updatedMessages.length - 1].text\n        };\n      }\n      return chat;\n    }));\n  };\n  const showNotification = message => {\n    if (settings.notifications && Notification.permission === 'granted' && document.hidden) {\n      new Notification('New Message', {\n        body: message,\n        icon: '/path/to/your/icon.png'\n      });\n    }\n  };\n  const handleNewChat = () => {\n    setActiveChat(null);\n    setMessages([]);\n    setInputMessage('');\n    setIsHistoryOpen(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputMessage.trim() === '') return;\n    const newMessage = {\n      text: inputMessage,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    if (activeChat) {\n      // Update existing chat\n      const updatedMessages = [...messages, newMessage];\n      updateChatHistory(activeChat.id, updatedMessages);\n    } else {\n      // Create new chat with proper category detection\n      const category = detectCategory(inputMessage);\n      const newChat = {\n        id: Date.now().toString(),\n        title: generateChatTitle(inputMessage),\n        category,\n        messages: [newMessage],\n        timestamp: new Date(),\n        lastMessage: inputMessage\n      };\n      setChatHistory(prev => [newChat, ...prev]);\n      setActiveChat(newChat);\n    }\n    setIsTyping(true);\n    socket.emit('user-message', inputMessage);\n    setInputMessage('');\n  };\n  const detectCategory = message => {\n    const lowerMessage = message.toLowerCase();\n    if (lowerMessage.includes('property') || lowerMessage.includes('land')) return 'property';\n    if (lowerMessage.includes('home') || lowerMessage.includes('house')) return 'home';\n    if (lowerMessage.includes('shop') || lowerMessage.includes('store')) return 'shop';\n    return 'business';\n  };\n  const generateChatTitle = message => {\n    // Generate a meaningful title from the first message\n    const words = message.split(' ');\n    const title = words.slice(0, 5).join(' ');\n    return title.length < message.length ? `${title}...` : title;\n  };\n  const handleChatSelect = chat => {\n    setActiveChat(chat);\n    setMessages(chat.messages);\n    setIsHistoryOpen(false);\n  };\n  const handleDeleteChat = chatId => {\n    setChatHistory(prev => prev.filter(chat => chat.id !== chatId));\n    if ((activeChat === null || activeChat === void 0 ? void 0 : activeChat.id) === chatId) {\n      setActiveChat(null);\n      setMessages([]);\n    }\n  };\n  const handleVoiceInput = () => {\n    if (isListening) {\n      stopListening();\n      setIsListening(false);\n    } else {\n      setIsListening(true);\n      startListening(transcript => {\n        setInputMessage(transcript);\n      }, error => {\n        console.error('Speech recognition error:', error);\n        setIsListening(false);\n      });\n    }\n  };\n  const handleMessageSpeak = text => {\n    if (isSpeaking) {\n      stopSpeaking();\n      setIsSpeaking(false);\n    } else {\n      speakText(text);\n      setIsSpeaking(true);\n    }\n  };\n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n  };\n  const closeHistory = () => {\n    setIsHistoryOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"show-history-button\",\n      onClick: toggleHistory,\n      title: isHistoryOpen ? \"Hide Chat History\" : \"Show Chat History\",\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `navbar-overlay ${isHistoryOpen ? 'visible' : ''}`,\n      onClick: closeHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatHistory, {\n      chats: chatHistory,\n      onSelectChat: handleChatSelect,\n      onDeleteChat: handleDeleteChat,\n      activeChat: activeChat,\n      isOpen: isHistoryOpen,\n      onClose: closeHistory,\n      onNewChat: handleNewChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `main-content ${isHistoryOpen ? 'shifted' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"chat-title\",\n            children: activeChat ? activeChat.title : 'New Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-chat-button\",\n            onClick: handleNewChat,\n            title: \"Start New Chat\",\n            children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), \"New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"settings-toggle\",\n            onClick: () => setIsSettingsOpen(true),\n            title: \"Open Settings\",\n            children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tool-button ${settings.autoSpeak ? 'active' : ''}`,\n            onClick: () => handleSettingChange('autoSpeak', !settings.autoSpeak),\n            title: settings.autoSpeak ? \"Disable auto-speak\" : \"Enable auto-speak\",\n            children: settings.autoSpeak ? /*#__PURE__*/_jsxDEV(VolumeUpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(VolumeOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-chat\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-chat-content\",\n            children: [/*#__PURE__*/_jsxDEV(ChatIcon, {\n              sx: {\n                fontSize: 48,\n                color: 'var(--text-secondary)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Start a New Conversation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Ask me anything about loans and financial assistance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.sender === 'user' ? defaultAvatar : `${defaultAvatar}&name=AI`,\n            alt: `${message.sender} avatar`,\n            className: \"message-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [message.text, message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"speak-button\",\n              onClick: () => handleMessageSpeak(message.text),\n              title: \"Listen to this message\",\n              children: isSpeaking ? /*#__PURE__*/_jsxDEV(StopIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(VolumeUpIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${defaultAvatar}&name=AI`,\n            alt: \"bot avatar\",\n            className: \"message-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tools-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tool-button\",\n            children: [/*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), \" Chat files\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tool-button\",\n            children: [/*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), \" Images\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tool-button\",\n            children: [/*#__PURE__*/_jsxDEV(TranslateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), \" Translate\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tool-button\",\n            children: [/*#__PURE__*/_jsxDEV(AudiotrackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), \" Audio Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"tool-button\",\n            children: [/*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), \" Attach File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            placeholder: \"Ask me anything about loans...\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `voice-button ${isListening ? 'active' : ''}`,\n            onClick: handleVoiceInput,\n            title: isListening ? \"Stop recording\" : \"Start recording\",\n            children: /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: inputMessage.trim() === '' || isTyping,\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {\n      isOpen: isSettingsOpen,\n      onClose: () => setIsSettingsOpen(false),\n      settings: settings,\n      onSettingChange: handleSettingChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"ZvtPUnpuNYrYJzEf9b8SvTFf7/g=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","SendIcon","ImageIcon","TranslateIcon","AudiotrackIcon","AttachFileIcon","CloseIcon","ChatIcon","MicIcon","StopIcon","VolumeUpIcon","VolumeOffIcon","SettingsIcon","MenuIcon","startListening","stopListening","speakText","stopSpeaking","Settings","ChatHistory","loanMessages","jsxDEV","_jsxDEV","socket","defaultAvatar","ChatBot","_s","messages","setMessages","chatHistory","setChatHistory","activeChat","setActiveChat","isHistoryOpen","setIsHistoryOpen","inputMessage","setInputMessage","isTyping","setIsTyping","isListening","setIsListening","isSpeaking","setIsSpeaking","isSettingsOpen","setIsSettingsOpen","settings","setSettings","darkMode","language","autoSpeak","voiceSpeed","notifications","messagesEndRef","document","body","setAttribute","Notification","permission","requestPermission","handleSettingChange","key","value","prev","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","on","response","newMessage","text","sender","timestamp","Date","updateChatHistory","id","hidden","showNotification","error","console","off","chatId","updatedMessages","map","chat","lastMessage","length","message","icon","handleNewChat","handleSubmit","e","preventDefault","trim","category","detectCategory","newChat","now","toString","title","generateChatTitle","emit","lowerMessage","toLowerCase","includes","words","split","slice","join","handleChatSelect","handleDeleteChat","filter","handleVoiceInput","transcript","handleMessageSpeak","toggleHistory","closeHistory","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","chats","onSelectChat","onDeleteChat","isOpen","onClose","onNewChat","AddIcon","fontSize","sx","color","index","src","alt","ref","onSubmit","type","onChange","target","placeholder","disabled","onSettingChange","_c","$RefreshReg$"],"sources":["C:/Users/nitis/Desktop/chatbot/chatbot-app/client/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport SendIcon from '@mui/icons-material/Send';\nimport ImageIcon from '@mui/icons-material/Image';\nimport TranslateIcon from '@mui/icons-material/Translate';\nimport AudiotrackIcon from '@mui/icons-material/Audiotrack';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { startListening, stopListening, speakText, stopSpeaking } from '../services/aiService';\nimport Settings from './Settings';\nimport ChatHistory from './ChatHistory';\nimport { loanMessages } from '../data/loanMessages';\nimport './ChatBot.css';\n\nconst socket = io('http://localhost:5000');\n\nconst defaultAvatar = 'https://ui-avatars.com/api/?background=random';\n\nfunction ChatBot() {\n  const [messages, setMessages] = useState([]);\n  const [chatHistory, setChatHistory] = useState(loanMessages);\n  const [activeChat, setActiveChat] = useState(null);\n  const [isHistoryOpen, setIsHistoryOpen] = useState(false);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [settings, setSettings] = useState({\n    darkMode: false,\n    language: 'en-US',\n    autoSpeak: false,\n    voiceSpeed: 1,\n    notifications: false\n  });\n  const messagesEndRef = useRef(null);\n\n  // Apply dark mode\n  useEffect(() => {\n    document.body.setAttribute('data-theme', settings.darkMode ? 'dark' : 'light');\n  }, [settings.darkMode]);\n\n  // Request notification permission\n  useEffect(() => {\n    if (settings.notifications && Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n  }, [settings.notifications]);\n\n  const handleSettingChange = (key, value) => {\n    if (key === 'clearHistory') {\n      setChatHistory([]);\n      setMessages([]);\n      setActiveChat(null);\n      return;\n    }\n\n    setSettings(prev => ({ ...prev, [key]: value }));\n\n    // Handle special cases\n    if (key === 'voiceSpeed' && isSpeaking) {\n      stopSpeaking();\n      setIsSpeaking(false);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    socket.on('bot-response', (response) => {\n      const newMessage = { text: response, sender: 'bot', timestamp: new Date() };\n      setMessages(prev => [...prev, newMessage]);\n      \n      if (activeChat) {\n        updateChatHistory(activeChat.id, [...messages, newMessage]);\n      }\n\n      setIsTyping(false);\n\n      // Auto-speak the response if enabled\n      if (settings.autoSpeak) {\n        speakText(response);\n      }\n\n      if (settings.notifications && document.hidden) {\n        showNotification(response);\n      }\n    });\n\n    socket.on('error', (error) => {\n      console.error('Error:', error);\n      setIsTyping(false);\n    });\n\n    return () => {\n      socket.off('bot-response');\n      socket.off('error');\n      stopListening();\n      stopSpeaking();\n    };\n  }, [settings.autoSpeak, settings.notifications, messages, activeChat]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const updateChatHistory = (chatId, updatedMessages) => {\n    setChatHistory(prev => prev.map(chat => {\n      if (chat.id === chatId) {\n        return {\n          ...chat,\n          messages: updatedMessages,\n          lastMessage: updatedMessages[updatedMessages.length - 1].text\n        };\n      }\n      return chat;\n    }));\n  };\n\n  const showNotification = (message) => {\n    if (settings.notifications && Notification.permission === 'granted' && document.hidden) {\n      new Notification('New Message', {\n        body: message,\n        icon: '/path/to/your/icon.png'\n      });\n    }\n  };\n\n  const handleNewChat = () => {\n    setActiveChat(null);\n    setMessages([]);\n    setInputMessage('');\n    setIsHistoryOpen(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputMessage.trim() === '') return;\n\n    const newMessage = {\n      text: inputMessage,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    \n    setMessages(prev => [...prev, newMessage]);\n    \n    if (activeChat) {\n      // Update existing chat\n      const updatedMessages = [...messages, newMessage];\n      updateChatHistory(activeChat.id, updatedMessages);\n    } else {\n      // Create new chat with proper category detection\n      const category = detectCategory(inputMessage);\n      const newChat = {\n        id: Date.now().toString(),\n        title: generateChatTitle(inputMessage),\n        category,\n        messages: [newMessage],\n        timestamp: new Date(),\n        lastMessage: inputMessage\n      };\n      setChatHistory(prev => [newChat, ...prev]);\n      setActiveChat(newChat);\n    }\n\n    setIsTyping(true);\n    socket.emit('user-message', inputMessage);\n    setInputMessage('');\n  };\n\n  const detectCategory = (message) => {\n    const lowerMessage = message.toLowerCase();\n    if (lowerMessage.includes('property') || lowerMessage.includes('land')) return 'property';\n    if (lowerMessage.includes('home') || lowerMessage.includes('house')) return 'home';\n    if (lowerMessage.includes('shop') || lowerMessage.includes('store')) return 'shop';\n    return 'business';\n  };\n\n  const generateChatTitle = (message) => {\n    // Generate a meaningful title from the first message\n    const words = message.split(' ');\n    const title = words.slice(0, 5).join(' ');\n    return title.length < message.length ? `${title}...` : title;\n  };\n\n  const handleChatSelect = (chat) => {\n    setActiveChat(chat);\n    setMessages(chat.messages);\n    setIsHistoryOpen(false);\n  };\n\n  const handleDeleteChat = (chatId) => {\n    setChatHistory(prev => prev.filter(chat => chat.id !== chatId));\n    if (activeChat?.id === chatId) {\n      setActiveChat(null);\n      setMessages([]);\n    }\n  };\n\n  const handleVoiceInput = () => {\n    if (isListening) {\n      stopListening();\n      setIsListening(false);\n    } else {\n      setIsListening(true);\n      startListening(\n        (transcript) => {\n          setInputMessage(transcript);\n        },\n        (error) => {\n          console.error('Speech recognition error:', error);\n          setIsListening(false);\n        }\n      );\n    }\n  };\n\n  const handleMessageSpeak = (text) => {\n    if (isSpeaking) {\n      stopSpeaking();\n      setIsSpeaking(false);\n    } else {\n      speakText(text);\n      setIsSpeaking(true);\n    }\n  };\n\n  const toggleHistory = () => {\n    setIsHistoryOpen(!isHistoryOpen);\n  };\n\n  const closeHistory = () => {\n    setIsHistoryOpen(false);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <button\n        className=\"show-history-button\"\n        onClick={toggleHistory}\n        title={isHistoryOpen ? \"Hide Chat History\" : \"Show Chat History\"}\n      >\n        <MenuIcon />\n      </button>\n\n      <div \n        className={`navbar-overlay ${isHistoryOpen ? 'visible' : ''}`}\n        onClick={closeHistory}\n      />\n\n      <ChatHistory\n        chats={chatHistory}\n        onSelectChat={handleChatSelect}\n        onDeleteChat={handleDeleteChat}\n        activeChat={activeChat}\n        isOpen={isHistoryOpen}\n        onClose={closeHistory}\n        onNewChat={handleNewChat}\n      />\n\n      <main className={`main-content ${isHistoryOpen ? 'shifted' : ''}`}>\n        <div className=\"chat-header\">\n          <div className=\"header-left\">\n            <h1 className=\"chat-title\">\n              {activeChat ? activeChat.title : 'New Chat'}\n            </h1>\n            <button \n              className=\"new-chat-button\"\n              onClick={handleNewChat}\n              title=\"Start New Chat\"\n            >\n              <AddIcon fontSize=\"small\" />\n              New Chat\n            </button>\n          </div>\n          <div className=\"header-controls\">\n            <button \n              className=\"settings-toggle\"\n              onClick={() => setIsSettingsOpen(true)}\n              title=\"Open Settings\"\n            >\n              <SettingsIcon />\n            </button>\n            <button \n              className={`tool-button ${settings.autoSpeak ? 'active' : ''}`}\n              onClick={() => handleSettingChange('autoSpeak', !settings.autoSpeak)}\n              title={settings.autoSpeak ? \"Disable auto-speak\" : \"Enable auto-speak\"}\n            >\n              {settings.autoSpeak ? <VolumeUpIcon /> : <VolumeOffIcon />}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"messages-container\">\n          {messages.length === 0 ? (\n            <div className=\"empty-chat\">\n              <div className=\"empty-chat-content\">\n                <ChatIcon sx={{ fontSize: 48, color: 'var(--text-secondary)' }} />\n                <h2>Start a New Conversation</h2>\n                <p>Ask me anything about loans and financial assistance</p>\n              </div>\n            </div>\n          ) : (\n            messages.map((message, index) => (\n              <div\n                key={index}\n                className={`message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`}\n              >\n                <img\n                  src={message.sender === 'user' ? defaultAvatar : `${defaultAvatar}&name=AI`}\n                  alt={`${message.sender} avatar`}\n                  className=\"message-avatar\"\n                />\n                <div className=\"message-content\">\n                  {message.text}\n                  {message.sender === 'bot' && (\n                    <button\n                      className=\"speak-button\"\n                      onClick={() => handleMessageSpeak(message.text)}\n                      title=\"Listen to this message\"\n                    >\n                      {isSpeaking ? <StopIcon fontSize=\"small\" /> : <VolumeUpIcon fontSize=\"small\" />}\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n          {isTyping && (\n            <div className=\"message bot-message\">\n              <img\n                src={`${defaultAvatar}&name=AI`}\n                alt=\"bot avatar\"\n                className=\"message-avatar\"\n              />\n              <div className=\"message-content\">\n                <div className=\"typing-indicator\">\n                  <div className=\"typing-dot\"></div>\n                  <div className=\"typing-dot\"></div>\n                  <div className=\"typing-dot\"></div>\n                </div>\n              </div>\n            </div>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n\n        <div className=\"chat-footer\">\n          <div className=\"tools-section\">\n            <button className=\"tool-button\">\n              <ChatIcon /> Chat files\n            </button>\n            <button className=\"tool-button\">\n              <ImageIcon /> Images\n            </button>\n            <button className=\"tool-button\">\n              <TranslateIcon /> Translate\n            </button>\n            <button className=\"tool-button\">\n              <AudiotrackIcon /> Audio Chat\n            </button>\n            <button className=\"tool-button\">\n              <AttachFileIcon /> Attach File\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"input-container\">\n            <input\n              type=\"text\"\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              placeholder=\"Ask me anything about loans...\"\n              className=\"message-input\"\n            />\n            <button\n              type=\"button\"\n              className={`voice-button ${isListening ? 'active' : ''}`}\n              onClick={handleVoiceInput}\n              title={isListening ? \"Stop recording\" : \"Start recording\"}\n            >\n              <MicIcon />\n            </button>\n            <button \n              type=\"submit\" \n              className=\"send-button\"\n              disabled={inputMessage.trim() === '' || isTyping}\n            >\n              <SendIcon />\n            </button>\n          </form>\n        </div>\n      </main>\n\n      <Settings \n        isOpen={isSettingsOpen}\n        onClose={() => setIsSettingsOpen(false)}\n        settings={settings}\n        onSettingChange={handleSettingChange}\n      />\n    </div>\n  );\n}\n\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}